<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

  <!-- HTTP Security Configuration -->
  <http auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint">
    <!-- Channel Manager -->
    <intercept-url pattern="/_rp/**" filters="none"/>
    <intercept-url pattern="/_cmsrest/**" filters="none"/>
    <intercept-url pattern="/_cmsinternal/security*" filters="none"/>

    <intercept-url pattern="/css/**" filters="none"/>
    <intercept-url pattern="/images/**" filters="none"/>
    <intercept-url pattern="/binaries/**" filters="none"/>
    <intercept-url pattern="/login.jsp*" filters="none"/>
    <intercept-url pattern="/memberLogin*" filters="none"/>
    <!-- <intercept-url pattern="/**" access="ROLE_everybody"/> -->
	<intercept-url pattern="/member/**" access="ROLE_member"/>
	<intercept-url pattern="/vendor/**" access="ROLE_vendor"/>
	    
    <!--  Reseller Specific URL Patterns this NEEDs to be looked into -->
    <intercept-url pattern="/r/*/memberLogin*" filters="none"/>
    <intercept-url pattern="/r/*/member/**" access="ROLE_member" />
	<intercept-url pattern="/r/*/vendor/**" access="ROLE_vendor"/>

    <custom-filter position="LOGOUT_FILTER" ref="customLogoutFilter"/>
    <custom-filter position="REMEMBER_ME_FILTER" ref="customRememberMeFilter"/>
    <custom-filter position="FORM_LOGIN_FILTER" ref="customUsernamePasswordAuthenticationFilter"/>
  </http>


  <!--
    Channel Manager specification. Need to override the default filter.

    Custom Login Entry Point
  -->
  <beans:bean id="loginUrlAuthenticationEntryPoint"
       class="org.onehippo.forge.security.support.springsecurity.authentication.login.HippoLoginUrlAuthenticationEntryPoint">
    <beans:property name="loginFormUrl" value="/memberLogin"/>
  </beans:bean>


  <!--
    Channel Manager specification. Need to override the default filter.

    Custom Form Login Filter
  -->
   <beans:bean id="customUsernamePasswordAuthenticationFilter"
                class="org.onehippo.forge.security.support.springsecurity.authentication.HippoUsernamePasswordAuthenticationFilter">
     <beans:property name="authenticationManager" ref="authenticationManager"/>
     <beans:property name="authenticationFailureHandler" ref="failureHandler"/>
     <beans:property name="authenticationSuccessHandler" ref="successHandler"/>
     <beans:property name="rememberMeServices" ref="rememberMeServices"/>
     <beans:property name="authenticationDetailsSource">
          <beans:bean class="org.springframework.security.authentication.AuthenticationDetailsSourceImpl">
              <beans:property name="clazz" value="org.onehippo.forge.security.support.springsecurity.authentication.MootlyWebAuthenticationDetails"/>
          </beans:bean>
     </beans:property>
   </beans:bean>

   <beans:bean id="successHandler"
           class="org.onehippo.forge.security.support.springsecurity.authentication.MootlySimpleUrlAuthenticationSuccessHandler">
        <!-- changes defaulturl from /member/itreturn to current by priyank -->
        <beans:property name="defaultTargetUrl" value="/member/itreturn/member-security.html"/>
   </beans:bean>

   <beans:bean id="failureHandler"
            class="org.onehippo.forge.security.support.springsecurity.authentication.MootlySimpleUrlAuthenticationFailureHandler">
      <beans:property name="defaultFailureUrl" value="/memberLogin?loginError=true"/>
      <beans:property name="redirectStrategy">
          <beans:bean class="org.springframework.security.web.DefaultRedirectStrategy">
          		<beans:property name="contextRelative" value="false"/>
          </beans:bean>
      </beans:property>
   </beans:bean>


  <!--
    Authentication Manager configuration with Hippo Repository based Authentication Provider configuration ('hippoAuthenticationProvider').
    However, you can use any other authentication provider(s) if you don't need to authenticate users against Hippo Repository.
  -->
  <authentication-manager alias="authenticationManager">
    <authentication-provider ref="mootlyHippoAuthenticationProvider" />
    <!-- Needed if you want the remember me feature-->
    <!--  <authentication-provider ref="hippoAuthenticationRememberMeProvider" />  -->
  </authentication-manager>

  <!--
    Hippo Repository based Authentication Provider. This Authentication Provider provide authentication against Hippo Repository Security Store.
    If you don't need to authenticate users against Hippo Repository, you don't have to include the following bean.
  -->
  <beans:bean id="hippoAuthenticationProvider"
              class="org.onehippo.forge.security.support.springsecurity.authentication.HippoAuthenticationProvider">
  </beans:bean>
  <!--  Mootly's Authentication PRovider -->
  <beans:bean id="mootlyHippoAuthenticationProvider"
              class="org.onehippo.forge.security.support.springsecurity.authentication.MootlyHippoAuthenticationProvider">
    <beans:property name="hippoUserDetailsService"  ref="mootlyHippoUserServiceDetailsService"/>
  </beans:bean>

  <!--
    Hippo Repository based Authentication Remember Me Provider. This Authentication Provider support of remember me against Hippo Repository Security Store.
    If you don't need to use the remember me feature, you don't have to include the following bean.
  -->
  <beans:bean name="mootlyHippoUserServiceDetailsService" class="org.onehippo.forge.security.support.springsecurity.authentication.MootlyHippoUserDetailsServiceImpl">
     <beans:property name="defaultRoleName" value="everybody"/>
  </beans:bean>
  
  <beans:bean id="hippoAuthenticationRememberMeProvider"
            class="org.onehippo.forge.security.support.springsecurity.authentication.rememberme.HippoAuthenticationRememberMeProvider">
    <beans:property name="hippoUserDetailsService" ref="mootlyHippoUserServiceDetailsService"/>
    <beans:property name="key" value="hipporemembermekey2012"/>
  </beans:bean>
  
  
  <beans:bean name="hippoUserServiceDetailsService" class="org.onehippo.forge.security.support.springsecurity.authentication.HippoUserDetailsServiceImpl">
     <beans:property name="defaultRoleName" value="everybody"/>
  </beans:bean>

  <beans:bean id="customRememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
      <beans:property name="rememberMeServices" ref="rememberMeServices"/>
      <beans:property name="authenticationManager" ref="authenticationManager"/>
  </beans:bean>


  <beans:bean id="rememberMeServices" class="org.onehippo.forge.security.support.springsecurity.authentication.rememberme.HippoTokenBasedRememberMeServices">
      <beans:property name="userDetailsService" ref="mootlyHippoUserServiceDetailsService"/>
      <beans:property name="key" value="hipporemembermekey2012"/>
      <beans:property name="tokenValiditySeconds" value="31536000"/>
  </beans:bean>

  <!--
    Channel Manager specification. Need to override the default filter.

    Custom Logout Filter
  -->
  <beans:bean id="hippoLogoutHandler" class="org.onehippo.forge.security.support.springsecurity.authentication.logout.HippoSecurityContextLogoutHandler"/>

  <beans:bean id="logoutSuccessHandler" class="org.onehippo.forge.security.support.springsecurity.authentication.logout.HippoLogoutSuccessHandler">
    <beans:property name="defaultTargetUrl" value="/member/logout"/>
  </beans:bean>
  
  <!-- <beans:bean id="customLogoutFilter" class="org.onehippo.forge.security.support.springsecurity.authentication.logout.HippoLogoutFilter">  -->
  <beans:bean id="customLogoutFilter" class="org.onehippo.forge.security.support.springsecurity.authentication.MootlyHippoLogoutFilter">
    <!-- if logout succeed then this is the URL -->
    <beans:constructor-arg ref="logoutSuccessHandler"/>
    <beans:constructor-arg>
        <beans:array>
            <beans:ref bean="hippoLogoutHandler"/>
        </beans:array>
    </beans:constructor-arg>
    <beans:property name="filterProcessesUrl" value="/j_spring_security_logout"/>
  </beans:bean>


</beans:beans>